---
version: 2
jobs:
  run_tests:
    docker:
      - image: crystallang/crystal:0.24.2
    steps:
      - checkout
      - run:
          name: Install System Dependencies
          command: apt-get update && apt-get install -y libsqlite3-dev
      - restore_cache:
          keys:
            - crankypants-shards-{{ checksum "shard.lock" }}
            - crankypants-shards-
      - run:
          name: Install Shards
          command: shards install
      - save_cache:
          key: crankypants-shards-{{ checksum "shard.lock" }}
          paths:
            - lib
      - run:
          name: Run Tests
          command: crystal spec

  push_docker_image:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - ~/caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i ~/caches/app.tar | true
      - run:
          name: Build Docker Image
          command: docker build --cache-from=hmans/crankypants:$CIRCLE_BRANCH -t hmans/crankypants:$CIRCLE_BRANCH .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p ~/caches
            docker save -o ~/caches/app.tar hmans/crankypants:$CIRCLE_BRANCH
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - ~/caches/app.tar
      - run:
          name: Run E2E Tests
          command: |
            pwd && ls -la && docker-compose -f docker-compose.tests.yml run --rm tests
      - deploy:
          name: Push Docker Image to Docker Hub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push hmans/crankypants:$CIRCLE_BRANCH
            fi

workflows:
  version: 2
  build-and-push-latest:
    jobs:
      - push_docker_image
      # - run_tests
      # - push_docker_image:
      #     requires: [run_tests]
